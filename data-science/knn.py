# -*- coding: utf-8 -*-
"""knn.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UAzzMkEq6Lt0Dadc9ud_WNcwnZGDus4C
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import confusion_matrix
from sklearn.metrics import f1_score
from sklearn.metrics import accuracy_score

dataset = pd.read_csv('diabetes.csv')
print(len(dataset))
print(dataset.head())

#replacing zeroes
zero_not_accepted = ['Glucose', 'BloodPressure', 'SkinThickness', 'BMI', 'Insulin']

for column in zero_not_accepted:
    dataset[column] = dataset[column].replace(0, np.NaN)
    mean = int(dataset[column].mean(skipna=True))
    dataset[column] = dataset[column].replace(np.NaN, mean)

#split dataset
X = dataset.iloc[:, 0:8]#doubt
y = dataset.iloc[:, 8]
X_train, X_test, y_train, y_test = train_test_split(X,y, random_state=0, test_size=0.2)#doubt

#feature scaling
sc_X = StandardScaler()
X_train = sc_X.fit_transform(X_train)
X_test = sc_X.transform(X_test)#why not scale y

classifier = KNeighborsClassifier(n_neighbors=11, p=2, metric = 'euclidean')

classifier.fit(X_train, y_train)

#predict test set
y_pred = classifier.predict(X_test)
y_pred

print(f1_score(y_test,y_pred))

print(accuracy_score(y_test, y_pred))

